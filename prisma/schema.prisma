// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["darwin","windows","linux-musl","rhel-openssl-1.0.x"]
  output = "../src/generated/client"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:10cb6333b8dfae21@124.223.56.117:3306/gd-db"
}



model Article {
  id                    String         @id @default(uuid())
  article_title         String         @unique
  article_description   String
  article_content       String         @db.LongText
  article_bigCover      String?
  article_cover         String?
  category_list         Category[]
  comment_list          Comment[]
  author                User           @relation(fields:[author_id],references:[id])
  author_id             String
  isExist               Boolean        @default(true)
  browse_times          Int            @default(0)
  like_times            Int            @default(0)
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
}

model Category {
    id                  String         @id @default(uuid())
    cate_name           String         @unique
    background          String
    cate_pic            String
    article_list        Article[]
}

model User {
    id                  String         @id @default(uuid())
    user_name           String         @unique
    avatar              String
    article_list        Article[]
    follower_list       FollowerMap[]
    focuser_list        FocuserMap[]
    comment_list        Comment[]
    isExist             Boolean        @default(true)
}

model FollowerMap {
    id                  String         @id @default(uuid())
    master              User           @relation(fields:[master_id],references:[id])
    master_id           String
}

model FocuserMap {
    id                  String         @id @default(uuid())
    follower            User           @relation(fields:[follower_id],references:[id])
    follower_id         String
}

model Comment {
    id                  String         @id @default(uuid())
    parent_id           String         @default("")
    comment             String
    commentBy           User           @relation(fields:[user_id],references:[id])
    user_id             String
    like_times          Int            @default(0)
    dislike_times       Int            @default(0)
    createdAt           DateTime       @default(now())
    article             Article        @relation(fields:[article_id],references:[id])
    article_id          String
}

model Carousel{
    id                  String        @id @default(uuid())
    img_url             String
}
